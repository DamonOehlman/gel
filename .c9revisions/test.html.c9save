{"ts":1342000012897,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>expression tester</title>\r\n    <script src=\"gel.js\" type=\"text/javascript\"></script>\r\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js\"></script>\r\n    <script>\r\n\r\n        String.prototype.format = String.prototype.f = function () {\r\n            var s = this,\r\n                i = arguments.length;\r\n\r\n            while (i--) {\r\n                var v;\r\n                try {\r\n                    v = arguments[i].toString();\r\n                }\r\n                catch (ex) {\r\n                    v = arguments[i];\r\n                }\r\n                s = s.replace(new RegExp('\\\\{' + i + '\\\\}', 'gm'), v);\r\n            }\r\n            return s;\r\n        };\r\n\r\n        gaffa =  {\r\n\r\n            model : {\r\n                array : [1, 2, 3],\r\n                prop : 15,\r\n                prop2 : 10,\r\n                empty: {},\r\n                get: function (path) {\r\n                    // slice of []\r\n                    path = path.slice(1,-1);\r\n                    var index = path.indexOf(\"model/\");\r\n                    if (index >= 0) {\r\n                        path = path.substring(index + 6);\r\n                    }\r\n                    return this[path];\r\n                }\r\n            }\r\n        };\r\n\r\n\r\n        function arrayEqual(arrayX, arrayY) {\r\n            if (!arrayX || !arrayY) {\r\n                return false;    \r\n            }\r\n            \r\n            if (arrayX.length != arrayY.length) return false;\r\n\r\n            for (var i = 0; i < arrayX.length; i++) {\r\n                if (arrayX[i] != arrayY[i]) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        $(document).ready(function () {\r\n\r\n            $.getJSON(\"expressionTests.json\", function(tests) {\r\n                //console.log(tests);\r\n                \r\n                for (var index = 0; index < tests.length; index++) {\r\n                    var test = tests[index][0],\r\n                        expected = tests[index][1],\r\n                        a,\r\n                        e;\r\n                        \r\n    \r\n                    var actual = \"[[ERROR]]\";\r\n                    var exceptionMsg = \"\";\r\n                    try {\r\n                        actual = gel.parse(test);\r\n                    }\r\n                    catch (ex) {\r\n                        exceptionMsg = ex;\r\n                        console.warn(\"Scan function failed!\" + ex , ex);\r\n                    }\r\n                    finally { }\r\n    \r\n                        \r\n                    // special case for printed functions\r\n                    if (typeof actual === \"function\"){\r\n                        a =  actual.toString().replace(/\\s+/g, '');\r\n                        e = expected.replace(/\\s+/g, '');\r\n                        passFail = a === e;\r\n                    } else if(typeof actual === \"object\"){\r\n                        actual = a =  JSON.stringify(actual);\r\n                        expected = e = JSON.stringify(expected);\r\n                        passFail = a === e;\r\n                    } else {\r\n                        passFail = actual === expected;\r\n                    }\r\n                    \r\n                    var trString = \r\n                        '<tr class=\"{0}\"><td>{1}</td><td>{2}</td><td>{3}</td><td>{4}</td><td>{5}</td></tr>'\r\n                        .format((passFail ? \"pass\" : \"fail\"), index, test, actual, expected, exceptionMsg);\r\n                    $(\"#initialtests tbody\").append(trString);\r\n                }\r\n         }).error(function() {console.log(arguments)});\r\n        });\r\n        \r\n        $(document).on('click', 'button.run',function(){\r\n             var expression = $('.expressions').val(),\r\n                resultBox = $('.results'),\r\n                result;\r\n                                \r\n                resultBox.val(gel.parse(expression));\r\n        });\r\n\r\n    </script>\r\n    <style type=\"text/css\">\r\n        textarea {\r\n            width: 90%;\r\n            height:250px;\r\n        }\r\n\r\n        td, th {\r\n            padding: 3px;\r\n        }\r\n\r\n        .pass {\r\n            background-color:#b6ff00;\r\n        }\r\n\r\n        .fail {\r\n            background-color: #ff6b6b;\r\n            \r\n        }\r\n        \r\n    </style>\r\n</head>\r\n<body>\r\n    <h1>Expression tester</h1>\r\n    <textarea class=\"expressions\"></textarea>\r\n    <br />\r\n    <button class=\"run\">Run</button>   <br />\r\n    <textarea class=\"results\"></textarea>\r\n\r\n    <table id=\"initialtests\">\r\n        <thead>\r\n            <tr>\r\n                <th>Id</th><th>Input</th><th>Actual</th><th>Expected</th><th>Exception</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n\r\n        </tbody>\r\n    </table>\r\n</body>\r\n</html>\r\n"]],"start1":0,"start2":0,"length1":0,"length2":4759}]],"length":4759}
